services:

    postgres:
        container_name: ${PROJECT_NAME}-postgres
        image: ${PROJECT_NAME}-postgres:${PROJECT_NAME}-${PROJECT_VERSION}
        build:
            context: .
            dockerfile: ${POSTGRES_DOCKERFILE}/Dockerfile
        ports:
            - "${POSTGRES_PORT}:${POSTGRES_PORT}"
        environment:
            POSTGRES_USER: ${POSTGRES_USERNAME}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        networks:
            - unified
        volumes:
            - postgres:/var/lib/postgresql/data

    pgadmin:
        container_name: ${PROJECT_NAME}-pgadmin
        image: ${PROJECT_NAME}-pgadmin:${PROJECT_NAME}-${PROJECT_VERSION}
        build:
            context: .
            dockerfile: ${PGADMIN_DOCKERFILE}/Dockerfile
        ports:
            - "${PGADMIN_PORT}:${PGADMIN_PORT_MAP}"
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        networks:
            - unified
        volumes:
            - pgadmin:/var/lib/pgadmin
        depends_on:
            - postgres

    client:
        container_name: ${PROJECT_NAME}-client
        image: ${PROJECT_NAME}-client:${PROJECT_NAME}-${PROJECT_VERSION}
        build:
            context: .
            dockerfile: ${CLIENT_DOCKERFILE}/Dockerfile
        ports:
            - "${CLIENT_PORT}:${CLIENT_PORT}"
        volumes:
            - ${CLIENT_DIRECTORY}:${CLIENT_WORK_DIRECTORY}
        working_dir: ${CLIENT_WORK_DIRECTORY}
        command: /bin/sh -c "bun install && bun --bun run dev"
        environment:
            - NUXT_PORT=${CLIENT_PORT}
            - NUXT_HOST=0.0.0.0
        depends_on:
            - postgres

    server:
        container_name: ${PROJECT_NAME}-server
        image: ${PROJECT_NAME}-server:${PROJECT_NAME}-${PROJECT_VERSION}
        build:
            context: .
            dockerfile: ${SERVER_DOCKERFILE}/Dockerfile
        ports:
            - "${SERVER_PORT}:${SERVER_PORT}"
        volumes:
            - ${SERVER_DIRECTORY}:${SERVER_WORK_DIRECTORY}
        working_dir: ${SERVER_WORK_DIRECTORY}
        command: tail -F anything #/bin/sh -c "bun install && bun run src/Main.ts"
        environment:
            - MYSQL_DATABASE=${POSTGRES_DATABASE}
            - MYSQL_USER=${POSTGRES_USERNAME}
            - MYSQL_PASSWORD=${POSTGRES_PASSWORD}
            - MYSQL_HOST=${POSTGRES_HOST}
            - SERVER_ID=1
            - QUERY_LOG=true
        depends_on:
            - postgres

    api:
        container_name: ${PROJECT_NAME}-api
        image: ${PROJECT_NAME}-api:${PROJECT_NAME}-${PROJECT_VERSION}
        build:
            context: .
            dockerfile: ${API_DOCKERFILE}/Dockerfile
        ports:
            - "${API_PORT}:${API_PORT}"
        volumes:
            - ${API_DIRECTORY}:${API_WORK_DIRECTORY}
        working_dir: ${API_WORK_DIRECTORY}
        command: /bin/sh -c "bun install && bun --bun run dev"
        environment:
            - EXPRESS_PORT=${API_PORT}
            - DATABASE_URL=${POSTGRES_URL}
        depends_on:
            - postgres

networks:
    unified:
        name: ${PROJECT_NAME}-network
        driver: bridge

volumes:
    postgres:
        name: ${PROJECT_NAME}-postgres
        driver: local
    pgadmin:
        name: ${PROJECT_NAME}-pgadmin
        driver: local